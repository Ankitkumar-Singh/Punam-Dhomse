@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Assignment9.Models.tblDepartment>

@{
    ViewBag.Title = "Index";
}

<script src="~/Scripts/Main.js"></script>
<h2>Index</h2>

<div class="container">
    <div class="row">
        <div class="col-md-6">
            <h2>Department List</h2>
        </div>
        <div class="col-md-6 ">
            @Html.ActionLink("Create New", "Create", "Departments", new { @class = "btn btn-success float-right mt-5 mb-1" })
        </div>
    </div>
    <p>
        @using (@Html.BeginForm("Index", "Departments", FormMethod.Get))
        {
            <b>Search By:</b>
            @Html.RadioButton("searchBy", "Department", true) <text>Department</text>
            @Html.RadioButton("searchBy", "Location") <text>Location</text>
            @Html.RadioButton("searchBy", "TotalEmployee") <text>Total Employee</text><br />
            @Html.TextBox("search", null, new { @class = "mt-3" }) <input type="submit" value="search" class="btn btn-info " />
        }
    </p>
    @using (Html.BeginForm("Delete", "Departments", FormMethod.Post))
    {
        <table class="table">
            <tr>
                <th> <input type="checkbox" id="checkAll" /></th>
                <th>
                    @Html.ActionLink("Department", "Index", new { sortBy = ViewBag.DepartmentSort, searchBy = Request["searchBy"], search = Request["search"] })
                </th>
                <th>
                    @Html.ActionLink("Location", "Index", new { sortBy = ViewBag.LocationSort, searchBy = Request["searchBy"], search = Request["search"] })
                </th>
                <th>
                    @Html.ActionLink("TotalEmployee", "Index", new { sortBy = ViewBag.EmployeeSort, searchBy = Request["searchBy"], search = Request["search"] })
                </th>
                <th>Operation</th>
            </tr>

            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="4">
                        No rows match search criteria.
                    </td>
                </tr>
            }
            else
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <input type="checkbox" name="DepartmentsIdsToDelete" id="DepartmentsIdsToDelete" value="@item.Id" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Department)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Location)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalEmployee)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-info m-1" })
                        </td>
                    </tr>
                }
            }
        </table>
        @Html.AntiForgeryToken()
        <div class="form-actions no-color">
            <input type="submit" id-="btnSubmit" value="Delete  Departments" class="btn btn-danger float-right" />
        </div>
    }
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request["sortBy"] }),
    new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded, DisplayItemSliceAndTotal = true })
</div>